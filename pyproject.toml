[project]
name = "pytroll-watchers"
dynamic = ["version"]
description = "Utility functions and scripts to watch for new files on local or remote filesystems."
authors = [
    { name = "Martin Raspaud", email = "martin.raspaud@smhi.se" }
]
dependencies = ["universal-pathlib>=0.2.5", "trollsift", "pyyaml", "geojson"]
readme = "README.md"
requires-python = ">= 3.11"
license = "Apache-2.0"
license-files = ["LICENSE.txt"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Communications"
]

[project.scripts]
pytroll-watcher = "pytroll_watchers.main_interface:cli"
pytroll-selector = "pytroll_watchers.selector:cli"

[project.entry-points."pytroll_watchers.backends"]
local = "pytroll_watchers.local_watcher"
minio = "pytroll_watchers.minio_notification_watcher"
dataspace = "pytroll_watchers.dataspace_watcher"
datastore = "pytroll_watchers.datastore_watcher"
dhus = "pytroll_watchers.dhus_watcher"
s3 = "pytroll_watchers.s3_poller"

[project.urls]
"Documentation" = "https://pytroll-watchers.readthedocs.io/en/latest/"

[project.optional-dependencies]
minio = ["minio", "s3fs"]
local = ["watchdog"]
publishing = ["posttroll"]
ssh = ["paramiko"]
dataspace = ["oauthlib", "requests_oauthlib", "s3fs"]
datastore = ["oauthlib", "requests_oauthlib", "aiohttp"]
dhus = ["defusedxml", "requests", "aiohttp"]
selector = []
s3 = ["s3fs"]
tests = ["freezegun", "responses", "moto[all]", "flask", "flask-cors", "pytroll-watchers[minio,local,publishing,ssh,dataspace,datastore,dhus,selector,s3]"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = []

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/pytroll_watchers"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pytroll_watchers/version.py"


[tool.ruff]
line-length = 120

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["A", "B", "D", "E", "W", "F", "I", "N", "PT", "S", "TID", "C90", "Q", "T10", "T20"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # assert allowed in tests
"docs/source/conf.py" = ["D100", "A001"]  # sphinx misbihaving
"src/pytroll_watchers/version.py" = ["D100", "Q000"]  # automatically generated by hatch-vcs

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10
